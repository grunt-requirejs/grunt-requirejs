Require.js
1、	实现js文件的异步加载，避免网页失去响应
2、	管理模块之间的依赖性，便于代码的编写和维护
引入的方式：
一、<script src="js/require.js" defer async="true" ></script>
二、<script src="js/require.js"  ></script>放在最底部
async属性表明这个文件需要异步加载，避免网页失去响应。IE不支持这个属性，只支持defer，所以把defer也写上
require.js默认的文件后缀名是js
实例：主模块依赖其他模块
require(['moduleA', 'moduleB', 'moduleC'], function (moduleA, moduleB, moduleC){
　　　　// some code here
});
require()函数接受两个参数。第一个参数是一个数组，表示所依赖的模块第二个参数是一个回调函数，当前面指定的模块都加载成功后，它将被调用，加载的模块会以参数形式传入该函数，从而在回调函数内部就可以使用这些模块
require.config({
　　　　baseUrl: "js/lib",
　　　　paths: {
　　　　　　"jquery": "jquery.min",
　　　　　　"underscore": "underscore.min",
　　　　　　"backbone": "backbone.min"
　　　　}
});
如果某个模块在另一台主机上，也可以直接指定它的网址，比如:
require.config({
　　　　paths: {
　　　　　　"jquery": "https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min"
　　　　}
});
AMD模块的写法
define(function (){
　　　　var add = function (x,y){
　　　　　　return x+y;
　　　　};
　　　　return {
　　　　　　add: add
　　　　};
});
加载的方法如下：
require(['math'], function (math){
　　　　alert(math.add(1,1));
});
如果这个模块还依赖其他模块，那么define()函数的第一个参数，必须是一个数组，指明该模块的依赖性。
define(['myLib'], function(myLib){
　　　　function foo(){
　　　　　　myLib.doSomething();
　　　　}
　　　　return {
　　　　　　foo : foo
　　　　};
　　});









